'use strict';

class Countdown {
    constructor(futureDate) {
        this.futureDate = futureDate;
    }
    get _actualDate() {
        return new Date()
    }
    get _futureDate() {
        return new Date(this.futureDate)
    }
    get _timeStampDiff() {
        return this._futureDate.getTime() - this._actualDate.getTime()
    }
    get days() {
        return Math.floor(this._timeStampDiff / (24 * 60 * 60 * 1000))
    }
    get hours() {
        return Math.floor(this._timeStampDiff / (60 * 60 * 1000))
    }
    get minutes() {
        return Math.floor(this._timeStampDiff / (60 * 1000))
    }
    get seconds() {
        return Math.floor(this._timeStampDiff / 1000)
    }
    get total() {
        const days = this.days;
        const hours = this.hours % 24;
        const minutes = this.minutes % 60;
        const seconds = this.seconds % 60;
        return {
            days,
            hours,
            minutes,
            seconds,
        }
    }
}

const halloweenTime = new Countdown('31 October 2023 00:00:00 GMT-0300');

function updateCountdown() {
    const units = {
        days: 'dia',
        hours: 'hora',
        minutes: 'minuto',
        seconds: 'segundo'
    };
    function formatTime(number, unit) {
        const unitString = number === 1 ? unit : unit + 's';
        return `${number} <span class="subtitle">${unitString}</span>`
    }
    const daysElement = document.querySelector('.days');
    const hoursElement = document.querySelector('.hours');
    const minutesElement = document.querySelector('.minute');
    const secondsElement = document.querySelector('.second');
    daysElement.innerHTML = formatTime(halloweenTime.total.days, units.days);
    hoursElement.innerHTML = formatTime(halloweenTime.total.hours, units.hours);
    minutesElement.innerHTML = formatTime(halloweenTime.total.minutes, units.minutes);
    secondsElement.innerHTML = formatTime(halloweenTime.total.seconds, units.seconds);
}

updateCountdown();

setInterval(updateCountdown, 1000);
